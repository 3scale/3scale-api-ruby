---
version: 2.1

tag-trigger: &tag-trigger
  tags:
    only: /^v.*/

commands:
  setup-bundler:
    steps:
      - run:
          name: setup bundler
          command: |
            sudo gem update --system
            sudo gem uninstall bundler
            sudo rm /usr/local/bin/bundle || true
            sudo rm /usr/local/bin/bundler || true
            sudo gem install bundler --version 2.2.21
            bundle config set path 'vendor/bundle'

  install_dependencies:
    steps:
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "Gemfile" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies

      - run:
          name: Install dependencies
          command: |
            bundle install --jobs=3 --retry=3

      - save_cache:
          key: v2-dependencies-{{ checksum "Gemfile" }}
          paths:
            - ./vendor/bundle

  unittests:
    steps:
      - setup-bundler
      - install_dependencies
      - run:
          name: Run unittests
          command: |
            bundle exec rake
jobs:
  ruby-262-unittest-coverage:
    docker:
      - image: circleci/ruby:2.6.2
    working_directory: ~/repo
    environment:
      COVERAGE: true
    steps:
      - checkout
      - unittests

  ruby-270-unittest-coverage:
    docker:
      - image: circleci/ruby:2.7.0
    working_directory: ~/repo
    environment:
      COVERAGE: true
    steps:
      - checkout
      - unittests

  ruby-262-unittest:
    docker:
      - image: circleci/ruby:2.6.2
    working_directory: ~/repo
    steps:
      - checkout
      - unittests

  ruby-270-unittest:
    docker:
      - image: circleci/ruby:2.7.0
    working_directory: ~/repo
    steps:
      - checkout
      - unittests

  push-rubygems:
    docker:
      - image: circleci/ruby:2.6.3-stretch-node
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Setup Rubygems
          command: bash .circleci/setup-rubygems.sh
      - run:
          name: Publish to Rubygems
          command: |
            gem build 3scale-api.gemspec -o "3scale-api-$(git describe --tags).gem"
            gem push "3scale-api-$(git describe --tags).gem"

workflows:
  version: 2
  tests:
    jobs:
      - ruby-262-unittest-coverage:
          filters:
            <<: *tag-trigger
          context: autotestaccount
      - ruby-270-unittest-coverage:
          filters:
            <<: *tag-trigger
          context: autotestaccount
      - push-rubygems:
          requires:
            - ruby-262-unittest-coverage
            - ruby-270-unittest-coverage
          filters:
            <<: *tag-trigger
            branches:
              ignore: /.*/
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - ruby-262-unittest:
          context: autotestaccount
      - ruby-270-unittest:
          context: autotestaccount
